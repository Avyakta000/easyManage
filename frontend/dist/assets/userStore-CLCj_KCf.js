import{p as d,y as h,q as n,e as l}from"./index-D5me0E8k.js";const o=d(),f=h("user",{state:()=>({users:[],error:null,isLoading:!1}),actions:{async fetchUsers(){var s,e;this.isLoading=!0,this.error=null;try{const r=await n.get("/api/users");this.users.splice(0,this.users.length,...r.data)}catch(r){this.error=((e=(s=r.response)==null?void 0:s.data)==null?void 0:e.error)||"Failed to fetch users"}finally{this.isLoading=!1}},async inviteUser(s){var e,r,t,a;this.isLoading=!0,this.error=null;try{(await n.post("/api/auth/invite",{email:s})).status===201&&o.success(`Invite sent to ${s}`)}catch(i){this.error=((r=(e=i.response)==null?void 0:e.data)==null?void 0:r.error)||"Failed to send invite",console.log(this.error,(a=(t=i==null?void 0:i.response)==null?void 0:t.data)==null?void 0:a.error,"faild"),o.error(this.error)}finally{this.isLoading=!1}},async updateUser(s,e){var t,a;const r=l();this.isLoading=!0,this.error=null;try{const i=await n.put(`/api/users/${s}`,e);if(r.user&&r.user.id===s)r.setUser({...r.user,...i.data}),o.success("Your profile has been updated!");else{const c=this.users.findIndex(u=>u.id===s);c!==-1&&this.users.splice(c,1,i.data),o.success("User record updated successfully!")}}catch(i){this.error=((a=(t=i.response)==null?void 0:t.data)==null?void 0:a.error)||"Failed to update user",o.error(this.error)}finally{this.isLoading=!1}},async deleteUser(s){var e,r;this.isLoading=!0,this.error=null;try{await n.delete(`/api/users/${s}`);const t=this.users.findIndex(a=>a.id===s);t!==-1&&(this.users.splice(t,1),o.success("Record Deleted !!!"))}catch(t){this.error=((r=(e=t.response)==null?void 0:e.data)==null?void 0:r.error)||"Failed to delete user",o.error(this.error)}finally{this.isLoading=!1}},async searchUsers(s){try{return(await n.get(`/api/users/search?searchQuery=${s}`)).data}catch(e){throw console.error("Error searching users:",e),e}}}});export{f as u};
